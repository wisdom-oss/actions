name: 'Build Docker Image'
description: 'Build a Docker Image for this repository'

inputs:
  image-tag:
    description: The last part of the image identification which is used for the image
    required: true
    default: ${{ github.ref_name }}
  image-name:
    description: The image name under which the image is to be stored
    required: true
    default: ${{ github.repository }}
  registry:
    description: The registry the image is being pushed to
    required: true
    default: ghcr.io
  registry-user:
    description: The user pushing the docker image into the registry
    required: true
    default: ${{ github.actor }}
  registry-password:
    description: The password for the user pushing the image to the registry
    required: true

runs:
  using: composite
  steps:
    - id: checkout
      name: Checkout Build Sources
      uses: actions/checkout@v4

    - id: setup-docker-buildx
      name: Setup BuildX for Docker
      uses: docker/setup-buildx-action@v3

    - id: registry-login
      name: Login into Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-user }}
        password: ${{ inputs.registry-password }}
    
    - id: docker-metadata
      name: Configure Metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ github.repository }}:${{ inputs.image-tag }}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}},priority=3000
          type=ref,event=tag,priority=2500
          type=ref,event=branch,priority=2000
          type=sha,prefix=,priority=1000

    - id: build-and-push-image
      name: Build and Push Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker-metadata.outputs.tags }}
        labels: ${{ steps.docker-metadata.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
