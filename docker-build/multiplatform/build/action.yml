name: 'Build Docker Image'
description: 'Build a Docker Image for this repository'

inputs:
  image-name:
    description: The image name under which the image is to be stored
    required: true
    default: ${{ github.repository }}
  registry:
    description: The registry the image is being pushed to
    required: true
    default: ghcr.io
  registry-user:
    description: The user pushing the docker image into the registry
    required: true
    default: ${{ github.actor }}
  registry-password:
    description: The password for the user pushing the image to the registry
    required: true
  target-platform:
    description: The Docker Image Target Platform for the build process
    required: true
  cache-path:
    description: The paths that shall be cached inbetween builds
    required: false
  cache-map:
    description: The mapping for mounting the caches into the containers
    required: false
  cache-key:
    description: A caching key that may be used to cache reproducible build artifacts
    required: false

runs:
  using: composite
  
  steps:

    - name: Prepare
      shell: bash
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV  

    - id: checkout
      name: Checkout Build Sources
      uses: actions/checkout@v4

    - id: qemu-setup
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - id: setup-docker-buildx
      name: Setup BuildX for Docker
      uses: docker/setup-buildx-action@v3

    - id: registry-login
      name: Login into Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-user }}
        password: ${{ inputs.registry-password }}
    
    - id: docker-metadata
      name: Configure Metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{inputs.image-name}}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}

    - id: build-cache
      name: Build Cache for Docker
      uses: actions/cache@v4
      if: ${{ inputs.cache-key != ''  && inputs.cache-path != '' && inputs.cache-map != '' }}
      with:
        path: ${{ inputs.cache-path }}
        key: ${{ inputs.cache-key }}

    - id: inject-cache
      name: Inject BuildKit Caches
      uses: reproducible-containers/buildkit-cache-dance@v3
      if: ${{ inputs.cache-key != ''  && inputs.cache-path != '' && inputs.cache-map != '' }}
      with:
        cache-map: ${{ inputs.cache-map }}
        skip-extraction: ${{ steps.build-cache.outputs.cache-hit }}


    - id: build-and-push-image
      name: Build and Push Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        labels: ${{ steps.docker-metadata.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ inputs.target-platform }}
        outputs: type=image,name=${{ inputs.registry }}/${{inputs.image-name}},push-by-digest=true,name-canonical=true,push=true
  
    - name: Export digest
      shell: bash
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"
    
    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1